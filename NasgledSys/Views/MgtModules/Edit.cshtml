@model NasgledSys.Models.ModuleClass
@{
    ViewBag.Title = "AddNewModule";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Scripts/AutoComplete/scStateCity.js"></script>

@section SideBar{

    <i class="icon-arrow-left52 position-left"></i>
    <span class="text-semibold"><a href="@Url.Action("Index","MgtModules")"><i class="icon-display4 position-left"></i>List of Modules</a></span>
    <small class="display-block"><i class="icon-display4 position-left"></i>Add New Module</small>

}
@using (Html.BeginForm("Edit", "MgtModules", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ModuleID, new { id= "ModuleID"})
    <div class="panel panel-flat">
        <div class="panel-heading">
            <h5 class="panel-title">New Module</h5>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse"></a></li>
                    <li><a data-action="reload"></a></li>

                </ul>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ModuleLevel, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ModuleLevel, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.ModuleLevel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NoSub, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.RadioButtonFor(model => model.NoSub, false, new { htmlAttributes = new { @class = "form-control" } }) Yes
                            @Html.RadioButtonFor(model => model.NoSub, true, new { htmlAttributes = new { @class = "form-control" } }) No
                            @Html.ValidationMessageFor(model => model.NoSub, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentModuleID, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.DropDownList("ParentModuleID", null, string.Empty, htmlAttributes: new { id = "ParentModuleID", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ParentModuleID, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

            </div>
        </div>

        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-default" />
            @Html.ActionLink("Cancel", "Index")
        </div>
    </div>
}