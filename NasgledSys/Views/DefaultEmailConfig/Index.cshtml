@model NasgledSys.Models.DefaultEmail

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section SideBar{

    <i class="icon-arrow-left52 position-left"></i>
    <a href="@Url.Action("AIndex","Home")" class="text-semibold"><i class="icon-display4 position-left"></i>Dashboard</a>


}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.ID)

    <div class="panel panel-flat">
        <div class="panel-heading">
            <h5 class="panel-title">Email Configuration</h5>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse"></a></li>
                    <li><a data-action="reload"></a></li>

                </ul>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">

                    <div class="form-horizontal">
                     
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmailAddress,"Email Address", htmlAttributes: new { @class = "control-label" })
                            
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new {@required="required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SenderName,"Sender Name", htmlAttributes: new { @class = "control-label" })
                            
                                @Html.EditorFor(model => model.SenderName, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                           
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SMTPServer,"SMTP Server", htmlAttributes: new { @class = "control-label" })
                           
                                @Html.EditorFor(model => model.SMTPServer, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SMTPServer, "", new { @class = "text-danger" })
                          
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SMTPPort,"SMTP PORT", htmlAttributes: new { @class = "control-label" })
                           
                                @Html.EditorFor(model => model.SMTPPort, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SMTPPort, "", new { @class = "text-danger" })
                           
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SMTPUsername,"Username", htmlAttributes: new { @class = "control-label" })
                           
                                @Html.EditorFor(model => model.SMTPUsername, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SMTPUsername, "", new { @class = "text-danger" })
                          
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SMTPPassword,"Password", htmlAttributes: new { @class = "control-label" })
                          
                                @Html.EditorFor(model => model.SMTPPassword, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SMTPPassword, "", new { @class = "text-danger" })
                        
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsSMTPssl,"SMTP SSL", htmlAttributes: new { @class = "control-label" })
                           
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsSMTPssl)
                                    @Html.ValidationMessageFor(model => model.IsSMTPssl, "", new { @class = "text-danger" })
                                </div>
                           
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.POPServer, "POP Server", htmlAttributes: new { @class = "control-label" })
                           
                                @Html.EditorFor(model => model.POPServer, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.POPServer, "", new { @class = "text-danger" })
                         
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IncomingPort,"Incoming Port", htmlAttributes: new { @class = "control-label" })
                           
                                @Html.EditorFor(model => model.IncomingPort, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IncomingPort, "", new { @class = "text-danger" })
                          
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.POPUsername, "POP Username", htmlAttributes: new { @class = "control-label" })
                          
                                @Html.EditorFor(model => model.POPUsername, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.POPUsername, "", new { @class = "text-danger" })
                           
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.POPpassword, "Password", htmlAttributes: new { @class = "control-label" })
                          
                                @Html.EditorFor(model => model.POPpassword, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.POPpassword, "", new { @class = "text-danger" })
                            
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IsPOPssl, "POP SSL", htmlAttributes: new { @class = "control-label" })
                           
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsPOPssl)
                                    @Html.ValidationMessageFor(model => model.IsPOPssl, "", new { @class = "text-danger" })
                               
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Fullname, "Full Name", htmlAttributes: new { @class = "control-label" })
                         
                                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                         
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Detail,"Details", htmlAttributes: new { @class = "control-label" })
                            
                                @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                          
                        </div>

                       
                    </div>
                    <div class="text-right">

                        <button type="submit" class="btn btn-primary">Save<i class="icon-arrow-right14 position-right"></i></button>
                      
                    </div>

                </div>

            </div>
        </div>


    </div>


    
}

