@model NasgledSys.Models.AreaDetailViewModel
@using NasgledSys.Models;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/notifications/bootbox.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/plugins/notifications/sweet_alert.min.js"></script>
<script type="text/javascript" src="~/Content/assets/js/pages/components_modals.js"></script>

<script src="~/Content/assets/js/plugins/forms/inputs/formatter.min.js"></script>
<script src="~/Content/assets/js/plugins/forms/inputs/touchspin.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
       
        LoadLightingSatisfaction();
    });
    function LoadLightingSatisfaction() {
        var select = $('select[name=LightingSatisfactionKey]');
        $.ajax({
            traditional: true,
            type: "post",
            dataType: "json",
            contentType: "application/json",
            url: "/DropdownUtility/LoadLightingSatisfaction/",
            data: JSON.stringify({ LightingSatisfactionKey: '@Model.LightingSatisfactionKey' }),
            success: function (data) {
                var res = "<option>Use Default</option>";
                for (var i = 0; i < data.length; i++) {
                    res = res + "<option value='" + data[i].PKey + "' " + data[i].Selected + ">" + data[i].FactorName + "</option>";
                }
                select.html(res);
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("Error on ajax call");
            }
        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
@{
    NasgledDBEntities db = new NasgledDBEntities();
    Guid? ak = Model.AreaKey;
    string areaLink = "";
    for (;;)
    {
        Area area = db.Area.Find(ak);
        areaLink = "<a class='h4' href='/MgtSubArea/Edit?id=" + area.AreaKey.ToString() + "'>" + area.AreaName + "</a> <label>></label>" + areaLink;

        if (area.ParentAreaKey == null)
        {
            break;
        }
        else
        {
            ak = area.ParentAreaKey;
        }
    }


}
@section CenterTitle{
    @ViewBag.heading
}
@section SideBar{
    <center>

        <span class="heading-text">

            <i class="icon-folder-download position-left"></i>  <a class="h4" href="@Url.Action("Created","MgtProject",new { id=GlobalClass.Project.ProjectKey})">Projects</a>
            <label>></label>@MvcHtmlString.Create(areaLink)

        </span>
        <span class="heading-text">
            <a class="btn btn-primary" href="@Url.Action("Create","MgtAddProducts",new { id=Model.AreaKey})"><i class="add-on"></i>Add Product</a>
        </span>
    </center>


}
<div class="content-wrapper">
    @using (Html.BeginForm("Edit", "AreaDetail", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.ValidationSummary()
        @Html.HiddenFor(m => m.AreaKey, new { id = "AreaKey" })
        @Html.HiddenFor(m => m.DetailKey, new { id = "DetailKey" })
        
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-2">&nbsp;</div>
                <div class="col-md-8">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <ul class="nav nav-pills">
                                <li><a href="@Url.Action("Edit", "MgtSubArea", new { id = Model.AreaKey })">Area</a></li>                               
                                <li><a href="@Url.Action("Index", "MgtAddProducts", new { id = Model.AreaKey })">Product</a></li>
                                <li class="active">
                                    <a href="#tab-demo1" data-toggle="tab">Details</a>
                                </li>
                                <li><a href="@Url.Action("Index", "MgtSubArea", new { id = Model.AreaKey })">Sub-Areas</a></li>
                                <li>
                                    <a href="@Url.Action("Edit", "AreaPhoto", new { id = Model.AreaKey })">Photos</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Edit", "AreaDocument", new { id = Model.AreaKey })">Documents</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Edit", "AreaNote", new { id = Model.AreaKey })">Notes</a>
                                </li>
                                <li><a href="#">Copy</a></li>

                            </ul>
                        </div>
                        <div class="panel-body">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="tab-demo1">

                                    <div class="panel-heading">
                                        <div class="col-md-8"><h3>Details Area</h3></div>
                                        <div class="col-md-4">
                                            <button type="submit" class="btn btn-primary btn-xlg col-lg-8" id="btnAdd">Save</button>
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <div class="h3 alert-info" id="deletemsg"></div>
                                        </div>
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Description)
                                            @Html.TextBoxFor(model => model.Description, new { placeholder = "description", id = "Description", @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AverageIlluminnce)
                                            @Html.TextBoxFor(model => model.AverageIlluminnce, new { @onkeypress = "return isNumberKey(event)", placeholder = "foot-candels", id = "AverageIlluminnce", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.AverageIlluminnce, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LightingSatisfactionKey)
                                            <select name="LightingSatisfactionKey" placeholder="Select" id="LightingSatisfactionKey" class="select"></select>
                                            @Html.ValidationMessageFor(model => model.LightingSatisfactionKey, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CeilingHeight)
                                            @Html.TextBoxFor(model => model.CeilingHeight, new { @onkeypress = "return isNumberKey(event)", placeholder = "feet", id = "CeilingHeight", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CeilingHeight, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Reflectance)
                                            @Html.TextBoxFor(model => model.Reflectance, new { @onkeypress = "return isNumberKey(event)", placeholder = "30", id = "Reflectance", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Reflectance, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AreaWidth)
                                            @Html.TextBoxFor(model => model.AreaWidth, new { @onkeypress = "return isNumberKey(event)", placeholder = "5", id = "AreaWidth", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.AreaWidth, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Length)
                                            @Html.TextBoxFor(model => model.Length, new { @onkeypress = "return isNumberKey(event)", placeholder = "feet", id = "Length", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">&nbsp;</div>
            </div>
        </div>
    }

    
   
   
   
</div>
 