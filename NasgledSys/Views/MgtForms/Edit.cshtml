@model NasgledSys.Models.Forms
@{
    ViewBag.Title = "AddNewForm";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>
@section SideBar{

    <i class="icon-arrow-left52 position-left"></i>
    <a href="@Url.Action("Index","MgtForms")" class="text-semibold"><i class="icon-display4 position-left"></i>List of Forms</a>


}
@using (Html.BeginForm("Edit", "MgtForms", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.FormID, new { id= "FormID" })
    <div class="panel panel-flat">
        <div class="panel-heading">
            <h5 class="panel-title">Edit Form</h5>
            <div class="heading-elements">
                <ul class="icons-list">
                    <li><a data-action="collapse"></a></li>
                    <li><a data-action="reload"></a></li>

                </ul>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.FormName, "Form Name")

                        @Html.TextBoxFor(model => model.FormName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FormName, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FormLevel, "Form Level")

                        @Html.TextBoxFor(model => model.FormLevel, new { @onkeypress = "return isNumberKey(event)", @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.FormLevel, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FormController, "Controller")

                        @Html.TextBoxFor(model => model.FormController, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.FormController, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FormView, "View Name")

                        @Html.TextBoxFor(model => model.FormView, new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.FormView, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ModuleID, "Module Name")

                        @Html.DropDownList("ModuleID", null, string.Empty, new { id = "ModuleID", @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.ModuleID, "", new { @class = "text-danger" })

                    </div>
                    <div class="text-right">

                        <button type="submit" class="btn btn-primary">Save<i class="icon-arrow-right14 position-right"></i></button>
                        @Html.ActionLink("Cancel", "Index")
                    </div>

                </div>

            </div>
        </div>


    </div>
}