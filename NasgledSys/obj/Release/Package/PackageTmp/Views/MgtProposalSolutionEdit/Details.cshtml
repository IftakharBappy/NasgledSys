@model NasgledSys.Models.ProposalSolutionEditDetailViewModel

@using NasgledSys.Models;
@{
    ViewBag.Title = "Solution";
    Layout = "~/Views/Shared/_UserLayout.cshtml";

}

@section CenterTitle{
    @Html.DisplayFor(m => GlobalClass.Project.ProjectName) <label>Proposal</label>
}
@*@section SideBar{
        <center>

            <span class="heading-text">

                <i class="icon-folder-download position-left"></i>
                <a class="h4" href="@Url.Action("SelectCompany","MgtProject",new { id=Model.CompanyKey})">@Html.DisplayFor(m => m.CompanyName)</a> <label>></label>
                <a class="h4" href="@Url.Action("Created","MgtProject",new { id=GlobalClass.Project.ProjectKey})">@GlobalClass.Project.ProjectName</a>
                <label>></label>
                <a class="h4" href="@Url.Action("Index","MgtProposal",new { id=GlobalClass.Project.ProjectKey})">Proposal</a>
            </span>
            <span class="heading-text pull-right">
                <a class="btn btn-primary" href="#"><i class="add-on"></i>Report</a>
            </span>
        </center>


    }*@
<div class="content-wrapper">
    @using (Html.BeginForm("Details", "MgtProposalSolutionEdit", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="form-horizontal">
            <div class="row">

                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <ul class="nav nav-pills">
                                <li class="active"><a href="@Url.Action("Existing","MgtProposalSolutionEdit",new {proposalKey=Model.ProposalKey})">Existing</a></li>
                                <li class="active"><a href="@Url.Action("Proposed","MgtProposalSolutionEdit",new { productKey=Model.ProductKey, proposalKey=Model.ProposalKey})">Proposed</a></li>
                                <li class="active"><a href="@Url.Action("Ratios","MgtProposalSolutionEdit",new { productKey=Model.ProductKey, proposalKey=Model.ProposalKey })">Ratios</a></li>
                                <li class="active"><a href="#tab-demo1" data-toggle="tab">Details</a></li>
                            </ul>
                        </div>
                        <div class="panel-body">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="tab-demo1">
                                    <h1>Update Soulution</h1>
                                    @Html.HiddenFor(m => m.ProductKey)
                                    @Html.HiddenFor(m => m.ProposalKey)
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProfileProductNameText)
                                        @Html.DisplayFor(m => m.ProfileProductNameText, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SolutionName)
                                        @Html.TextBoxFor(model => model.SolutionName, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.IncentiveTypeKey)
                                        @Html.DropDownListFor(model => model.IncentiveTypeKey, ViewBag.IncentiveTypes as SelectList, "Select", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.IncentiveAmount)
                                        @Html.TextBoxFor(model => model.IncentiveAmount, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.IncentiveMaxTypeKey)
                                        @Html.DropDownListFor(model => model.IncentiveMaxTypeKey, ViewBag.IncentiveMaxType as SelectList, "Select", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.IncentiveMaxAmount)
                                        @Html.TextBoxFor(model => model.IncentiveMaxAmount, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProductCost)
                                        @Html.TextBoxFor(model => model.ProductCost, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.MarkupPercentage)
                                        @Html.TextBoxFor(model => model.MarkupPercentage, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.InstallationTime)
                                        @Html.TextBoxFor(model => model.InstallationTime, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.InstallationCost)
                                        @Html.TextBoxFor(model => model.InstallationCost, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.MiscCost)
                                        @Html.TextBoxFor(model => model.MiscCost, new { @class = "form-control", type = "number" })
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ProductName)
                                        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ModelNo)
                                        @Html.TextBoxFor(model => model.ModelNo, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.WattPerProduct)
                                        @Html.TextBoxFor(model => model.WattPerProduct, new { @class = "form-control", type = "number" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ThermalEfficency)
                                        @Html.TextBoxFor(model => model.ThermalEfficency, new { @class = "form-control", type = "number" })
                                    </div>

                                    <div class="col-md-12">
                                        <button type="button" class="btn btn-default border-blue" onclick="location.href='@Url.Action("Ratios", "MgtProposalSolutionEdit", new { productKey = Model.ProductKey, proposalKey = Model.ProposalKey })'">Back</button>
                                        <button type="submit" class="btn btn-success">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

            </div>

        </div>
    }


</div>
<script>
    $(document).ready(function () {
        $("input[type='number']").keypress(function (e) {
            console.log(e.key);
            //console.log(e.target.id);
            var oldVal = $("#IncentiveAmount").val();
            console.log(oldVal);
            //var oldVal = e.target.value;
            
            //if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            //    return false;
            //}
        });
    });
</script>